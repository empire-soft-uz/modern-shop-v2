import Head from "next/head";
import styles from "@/styles/home.module.css";
import TopHeader from "./components/global/TopHeader";
import Header from "./components/global/Header";
import Categories from "./components/global/Categories";
import Image from "next/image";
import Card from "./components/global/Card";
import Footer from "./components/global/Footer";
import { useState, useRef, useEffect } from "react";
import HeaderTabs from "./components/local/HeaderTabs";
import { Swiper, SwiperSlide } from "swiper/react";
import "swiper/css";
import Link from "next/link";
import { Navigation, Pagination } from "swiper/modules";
import "swiper/css/navigation";
import { useRouter } from "next/router";
import "swiper/css/pagination";
import axios from "axios";
import Loader from "./components/local/Loader";

export default function Home() {
  const [nav, setNav] = useState<number>(0);
  const [buttonColor, setButtonColor] = useState<number>(0);
  const [slidesPerView, setSlidesPerView] = useState<number>(4);
  const [data, setData] = useState<any[] | any>([]);
  const [popularProducts, setPopularProducts] = useState<any[] | any>([]);
  const [slides, setSlides] = useState<any[] | any>([]);
  const [isLiked, setIsLiked] = useState<any[] | any>([]);
  const [categories, setCategories] = useState<any | any[]>([]);
  const [load, setLoad] = useState<boolean>(true);
  const [likedObj, setLikedObj] = useState<any[]>([]);

  const [vendor, setVendor] = useState<any[] | any>([]);
  const router = useRouter();

  const objCard = [
    {
      price: "300.00.00",
      title: "Iphone 14 pro",
      width: 95,
      height: 113,
      image: "/icons/phone.svg",
      cat: "Телефоны",
    },
    {
      price: "300.00.00",
      title: "Iphone 14 pro",
      width: 95,
      height: 113,
      image: "/icons/phone.svg",
      cat: "Телефоны",
    },
    {
      price: "300.00.00",
      title: "Iphone 14 pro",
      width: 95,
      height: 113,
      image: "/icons/phone.svg",
      cat: "Телефоны",
    },
  ];

  useEffect(() => {
    setLoad(true);
    axios
      .get(`${process.env.NEXT_PUBLIC_API}/api/products`)
      .then((res: any) => {
        setData(res.data);
      })
      .catch((e: string) => console.log(e));
  }, []);

  useEffect(() => {
    setLoad(true);
    axios
      .get(`${process.env.NEXT_PUBLIC_API}/api/categories`)
      .then((res) => {
        setCategories(res.data);
      })
      .catch((err) => console.log(err))
      .finally(() => {
        setLoad(false);
      });
  }, []);
  useEffect(() => {
    setLoad(true);
    axios
      .get(`${process.env.NEXT_PUBLIC_API}api/slides`)
      .then((res) => {
        setSlides(res.data);
      })
      .catch((err) => console.log(err))
      .finally(() => {
        setLoad(false);
      });
  }, []);
  useEffect(() => {
    setLoad(true);
    axios
      .get(`${process.env.NEXT_PUBLIC_API}/api/products?popularProducts=true`)
      .then((res) => {
        setPopularProducts(res.data);
      })
      .catch((err) => console.log(err))
      .finally(() => {
        setLoad(false);
      });
  }, []);

  useEffect(() => {
    document.body.offsetWidth < 680 && document.body.offsetWidth > 460
      ? setSlidesPerView(3)
      : document.body.offsetWidth < 460
      ? setSlidesPerView(2)
      : setSlidesPerView(4);
  }, []);

  useEffect(() => {
    setLoad(true);
    axios
      .get(`${process.env.NEXT__PUBLIC_API}/api/vendors`)
      .then((res) => {
        setVendor(res.data);
      })
      .catch((err) => console.log(err))
      .finally(() => {
        setLoad(false);
      });
  }, []);
  useEffect(() => {
    setLoad(true);
    axios
      .get(`${process.env.NEXT_PUBLIC_API}/api/slides`)
      .then((res) => {
        setSlides(res.data);
      })
      .catch((err) => console.log(err))
      .finally(() => {
        setLoad(false);
      });
  }, []);
  useEffect(() => {
    setLoad(true);
    axios
      .get(`${process.env.NEXT_PUBLIC_API}/api/products?popularProducts=true`)
      .then((res) => {
        setPopularProducts(res.data);
      })
      .catch((err) => console.log(err))
      .finally(() => {
        setLoad(false);
      });
  }, []);

  useEffect(() => {
    document.body.offsetWidth < 680 && document.body.offsetWidth > 460
      ? setSlidesPerView(3)
      : document.body.offsetWidth < 460
      ? setSlidesPerView(2)
      : setSlidesPerView(4);
  }, []);

  const pagination: object = {
    clickable: true,
    renderBullet: function (index: number, className: string) {
      return '<span class="' + className + '">' + (index + 1) + "</span>";
    },
  };
  console.log(data);
  if (!load) {
    return (
      <>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className={styles.home}>
          <TopHeader />
          <Header />
          <Categories />
          <div className={styles.container}>
            <HeaderTabs
              setButtonColor={setButtonColor}
              buttonColor={buttonColor}
            />
            {buttonColor === 0 ? (
              <>
                <div>
                  <Swiper
                    pagination={pagination}
                    modules={[Pagination]}
                    className={styles.add}
                  >
                    {slides &&
                      slides.map((e: any) => {
                        return (
                          <SwiperSlide key={e.id} className={styles.addItem}>
                            <Link
                              href={
                                e.productId
                                  ? `/detail/${e.productId}`
                                  : `/company/${e.vendorId}`
                              }
                              className={styles.addLeft}
                            >
                              <h1>{e.title}</h1>
                              <Image
                                src={`${process.env.NEXT_PUBLIC_IMAGE_API}/${e.image.name}`}
                                alt="iphone image"
                                width={308}
                                height={410}
                              />
                              <div className={styles.controller}>
                                {[1, 2, 3, 4].map((e: number) => {
                                  return (
                                    <div key={e} className={styles.circle} />
                                  );
                                })}
                              </div>
                            </Link>
                          </SwiperSlide>
                        );
                      })}
                  </Swiper>
                </div>
                <div className={styles.categories}>
                  <h3
                    style={{
                      fontSize: 23,
                    }}
                  >
                    Категории для вас
                  </h3>
                  <Swiper
                    spaceBetween={50}
                    slidesPerView={slidesPerView}
                    className={styles.swiperL}
                    modules={[Navigation]}
                    navigation={true}
                  ></Swiper>
                </div>
                <section className={styles.newProducts}>
                  <h3>Новые продукты</h3>
                  <div className={styles.newProductsWrapper}>
                    {data &&
                      data?.products?.map((e: any, index: number) => {
                        return (
                          <Card
                            animation="fade-down"
                            cat={"e.subcategory.name"}
                            url={e.id}
                            height={300}
                            width={300}
                            image={
                              e.media.length
                                ? ` ${process.env.NEXT_PUBLIC_IMAGE_API}/${e.media[1]?.name}`
                                : "/images/14.png"
                            }
                            title={e.name}
                            price={e.price[0].price}
                            key={index}
                            isLiked
                            likedObj={likedObj}
                            setLikedObj={setLikedObj}
                          />
                        );
                      })}
                  </div>
                  <button className={styles.loadMore}>Посмотреть больше</button>
                  <section className={styles.newProducts}>
                    <h3>Популярные продукты</h3>
                    <div className={styles.newProductsWrapper}>
                      {popularProducts &&
                        popularProducts.products?.map(
                          (card: any, index: number) => {
                            return (
                              <Card
                                animation="fade-down"
                                cat={card.subcategory.name}
                                url={card.id}
                                height={300}
                                width={300}
                                image={
                                  card.media.length
                                    ? `${process.env.NEXT_PUBLIC_IMAGE_API}/${card.media[1]?.name}`
                                    : "/images/14.png"
                                }
                                title={card.name}
                                price={card.price[0].price}
                                key={index}
                                isLiked
                                likedObj={likedObj}
                                setLikedObj={setLikedObj}
                              />
                            );
                          }
                        )}
                    </div>
                    <button className={styles.loadMore}>
                      Посмотреть больше
                    </button>
                  </section>
                </section>
              </>
            ) : (
              <>
                {[1, 2, 3, 4, 5].map((e: number) => {
                  return (
                    <div className={styles.cards} key={e}>
                      <div className={styles.card__left}>
                        <Link
                          style={{
                            color: "#000",
                          }}
                          href={`/company/${e}`}
                          className={styles.card__title}
                        >
                          <Image
                            src={"/icons/profile.svg"}
                            height={57}
                            width={57}
                            alt="profile"
                          />
                          <div>
                            <h3>Shenzhen Qingmai Bicycle Co., Ltd.</h3>
                            <p>Мужское</p>
                          </div>
                        </Link>
                        <div className={styles.description}>
                          <p>Описание</p>
                          <p>
                            Lorem ipsum dolor sit amet, consectetur adipiscing
                            elit, sed do eiusmod tempor incididunt ut labore et
                            dolore magna aliqua. Ut enim ad minim veniam, quis
                            nostrud exercitation ullamco laboris nisi ut aliquip
                            ex ea commodo consequat.
                          </p>
                        </div>
                      </div>
                      <div className={styles.card__right}>
                        <div className={styles.cards__button}>
                          <button
                            onClick={() => {
                              router.push(`/company/${e}`);
                            }}
                          >
                            Посмотреть все товары
                          </button>
                          <button>Связаться</button>
                        </div>
                        <div className={styles.carusel__card}>
                          {objCard.map((e: any, index: number) => {
                            return (
                              <Card
                                title={e.name}
                                image={e.image}
                                width={e.width}
                                height={e.height}
                                price={e.price}
                                cat={e.cat}
                                likedObj={likedObj}
                                isLiked
                                url={`${index}`}
                                animation=""
                                setLikedObj={setLikedObj}
                              />
                            );
                          })}
                          <section className={styles.controllerProduct}>
                            <button>
                              <Image
                                src={"/icons/chevronLeft.svg"}
                                alt="chevron left icon"
                                width={11}
                                height={20}
                              />
                            </button>
                            <button>
                              <Image
                                src={"/icons/chevronRight.svg"}
                                alt="chevron right icon"
                                width={11}
                                height={20}
                              />
                            </button>
                          </section>
                        </div>
                      </div>
                    </div>
                  );
                })}
                <div className={styles.carusel}>
                  <div
                    style={{
                      backgroundColor: "#E4B717",
                      width: 39,
                      height: 39,
                      borderRadius: "100%",
                      color: "#fff",
                      textAlign: "center",
                      paddingTop: 8,
                    }}
                  >
                    <p>1</p>
                  </div>
                </div>
              </>
            )}
          </div>
          <Footer />
        </main>
      </>
    );
  } else {
    return <Loader />;
  }
}
